# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
  - cron: '0 23 * * *' # 每天UTC时间23点执行，对应北京时间第二天的7点

permissions:
  contents: read


jobs:
  build:

    runs-on: ubuntu-latest
    environment: newsLetter_env
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9.18
      uses: actions/setup-python@v3
      with:
        python-version: "3.9.18"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install flake8 pytest
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: update news to notion
      run: |
          echo  "${{ secrets.NOTION_TOKEN }}"
          python UpdateNews.py "${{ secrets.NOTION_TOKEN }}" "${{ secrets.OPENAI_API_KEY }}" "${{ secrets.PAGE_ID }}"
#          echo "test1 variable : $test1_var"
#          echo "test2 variable : $test2_var"
#          echo "test3 variable : $test3_var"
#          python UpdateNews.py $test1_var $test2_var $test3_var
#      env:
#          test1_var: ${{ secrets.test1 }}
#          test2_var: ${{ secrets.test2 }}
#          test3_var: ${{ secrets.test3 }}
#
#    #        python UpdateNews.py "${{ secrets.NOTION_TOKEN }}" "${{ secrets.OPENAI_API_KEY }}" "${{ secrets.PAGE_ID }}"
#
